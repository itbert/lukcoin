from aiogram import F, Router
from aiogram.fsm.context import FSMContext

from bot.keyboards.keyboardsMainPage import *
from bot.handlers.states.TransactionStates import Transaction

from database.pseudo_database.db import db
from database.pseudo_database.db import transactions_base


router_transaction = Router()


@router_transaction.message(F.text == "–ü–µ—Ä–µ–≤–æ–¥")
async def translate(message: Message, state: FSMContext):
    await message.answer('‚è¨ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –∂–µ–ª–∞–µ—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–æ–∏–Ω—ã ‚è¨')
    await state.set_state(Transaction.user_wallet)


@router_transaction.message(Transaction.user_wallet)
async def tr2(message: Message, state: FSMContext):

    recipient_id = int(message.text)
    donor_id = message.from_user.id
    transactions_base.update({donor_id: recipient_id})

    await state.update_data(user_wallet=recipient_id)

    await message.answer('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ LUKCOIN-–æ–≤ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞')

    await state.set_state(Transaction.transaction_amount)


@router_transaction.message(Transaction.transaction_amount)
async def tr3(message: Message, state: FSMContext):

    transaction_amount = int(message.text)
    donor_id = message.from_user.id

    if 15 <= transaction_amount < db[donor_id]['coins']:

        await state.update_data(transaction_amount=transaction_amount)

        db[donor_id]['coins'] -= transaction_amount
        db[transactions_base[donor_id]]['coins'] += transaction_amount

        # print(db)

        await message.answer(
            text=f'‚úî –ü–ï–†–ï–í–û–î –ü–û –ù–û–ú–ï–†–£ –ö–û–®–ï–õ–¨–ö–ê ‚úî\n'
                 f'\nüçÉ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {db[donor_id]["name"]}'
                 f'\nüéÅ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {db[transactions_base[donor_id]]["name"]}'
                 f'\nüí∞ –°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ {transaction_amount} –∫–æ–∏–Ω–æ–≤'
        )

        """
        TODO: –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º
        """

        transactions_base.pop(donor_id)

        # print(transactions_base)

        await state.clear()
    else:
        await message.answer('üí≤ –ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞')
        await state.clear()
